
name: Deploy to Digital Ocean Kubernetes

on:
  push:
    branches:
      #- master

env:
  CACHE_IMAGE: steel8rat/cache
  IMAGE_TAG: ${{ github.sha }} # take commit sha as a image tag

  K8S_CLUSTER_NAME: k8s-cache
  K8S_CONFIG_FOLDER: do-k8s

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn run build

      - name: Test
        run: yarn run test

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: dist

  build_docker_image:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Downloaded files
        run: ls -R
        working-directory: ./

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build --build-arg APP_FOLDER=artifact --file ./Dockerfile --tag $CACHE_IMAGE:$IMAGE_TAG .

      - name: Push image to Dockerhub
        run: docker push $CACHE_IMAGE:$IMAGE_TAG

      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '1 hour'

  deploy_to_do:
    needs:
      - build_and_test
      - build_docker_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Update api-server deployment file
        run: sed -i 's|<TAG>|'${IMAGE_TAG}'|' $GITHUB_WORKSPACE/$K8S_CONFIG_FOLDER/api-server.yml

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save $K8S_CLUSTER_NAME

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/$K8S_CONFIG_FOLDER

      - name: Verify deployments
        run: kubectl get deployments --output name | xargs -n1 kubectl rollout status